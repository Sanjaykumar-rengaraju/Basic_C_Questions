#include<stdio.h>
#include<math.h>

void swap(int *t1,int *t2){
    int temp = *t1;
    *t1 = *t2;
    *t2 = temp;
}

void digit(int num){
    int sum = 0;
    while(num != 0){
        int digit = num % 10;
        num/=10;
        sum+=digit;
        printf("%d\t",digit);
    }
    printf(" %d ",sum);
}

void reverseNum(int num){
    int rev = 0;
    while(num != 0){
        int digit = num % 10;
        rev = rev * 10 + digit;
        num /= 10;
    }
    printf("%d",rev);
}

void palindrome(int num){
    int rev = 0;
    int temp = num;
    while(temp != 0){
        int digit = temp % 10;
        rev = rev * 10 + digit;
        temp /= 10;
    }
    rev == num ? printf("Palindrome") : printf("Not Palindrome");
}

void armstrong(int num){
    int temp1 = num, temp2 = num,sum = 0, countOfDigits = 0;
    while(temp1 != 0){
        countOfDigits++;
        temp1 /= 10;
    }
    while(temp2 != 0){
        int digit = temp2%10;
        int power = 1;
        for(int i = 1; i <= countOfDigits; i++){
            power *= digit;
        }
        sum += power;
        temp2/=10;
    }
    num == sum ? printf("Armstrong") : printf("Not Armstrong");
}

void fibo(int num){
    int x = 0, y = 1, sum = 0;
    if(num == 0){
        printf("Enter num greater 0");
    }
    if(num >= 1){
        printf("%d\n",x);
    }
    if(num >= 2)
        printf("%d\n",y);
    
    for(int i = 3; i <= num; i++){
        sum = x + y;
        printf("%d\n",sum);
        x = y;
        y = sum;
    }
}

void prime(int num){
    int status = 1;
    if(num == 0 || num == 1){
        status = 0;
    }
    for(int i = 2; i <= sqrt(num); i++){
        if(num%i == 0)
            status = 0;
            break;
    }
    status ? printf("Prime\n") : printf("Not Prime\n");
}

void perfectNum(int num){
    int sum = 0;
    for(int i = 1; i <= num/2; i++){
        if(num % i == 0){ 
            sum+=i;
        }
    }
    sum == num ? printf("Perfect") : printf("Not Perfect");
}

void box(int n1,int n2){
    for(int i = 0; i < n1; i++){
        for(int j = 0; j < n2; j++){
            printf("*");
        }
        printf("\n");
    }
}

void hollowBox(int n1, int n2){
    for(int i = 1; i <= n1; i++){
        for(int j = 1; j <= n2; j++){
            if(i == 1 || i == n1 || j == 1 || j == n2){
                printf("*");
            }
            else{
                printf(" ");
            }
        }
        printf("\n");
    }
}

void diagonal(int n1, int n2){
    for(int i = 1; i <= n1; i++){
        for(int j = 1; j <= n2; j++){
            if(i == j || i + j == n1 + 1){
                printf("*");
            }
            else{
                printf(" ");
            }
        }
        printf("\n");
    }
}

void pattern1(int n){
    for(int i = 0; i < n; i++){
        for(int j = 0; j < i; j++){
            printf("* ");
        }
        printf("\n");
    }
}

void pattern2(int n){
    for(int i = 1; i <= n; i++){
        for(int j = 1; j <= i; j++){
            printf("%d ",j);
        }
        printf("\n");
    }
}

void pattern3(int n){
    for(int i = 1; i <= n; i++){
        for(int j = 1; j <= i; j++){
            //printf("%c ",96+j); 
            printf("%c ",64+j);
        }
        printf("\n");
    }
}

void pattern4(int n){
    for(int i = n; i > 0; i--){
        for(int j = 0; j < i; j++){
            printf("* ");
        }
        printf("\n");
    }
}

void pattern5(int n){
    for(int i = n; i > 0; i--){
        for(int j = 1; j <= i; j++){
            printf("%d ",j);
        }
        printf("\n");
    }
}

void pattern6(int n) {
    for(int i = 1; i <= n; i++){
        int k = 0;
        for(int spaces = 1; spaces <= n - i; spaces++){
            printf(" ");
        }
        while(k != 2*i-1){
            printf("*");
            k++;
        }
        printf("\n");
    }
}

void pattern7(int n) {
    for(int i = 1; i <= n; i++){
        int k = 0,count = 0, count1 = 0;
        for(int spaces = 1; spaces <= n - i; spaces++){
            printf(" ");
            count++;
        }
        while (k != 2 * i - 1) {
         if (count <= n - 1) {
            printf("%d", i + k);
            ++count;
         } else {
            ++count1;
            printf("%d", (i + k - 2 * count1));
         }
         ++k;
      }
      count1 = count = k = 0;
      printf("\n");
    }
}

void pattern8(int n) {
    for(int i = n; i > 0; i--){
        int k = 0;
        for(int spaces = 1; spaces <= n - i; spaces++){
            printf(" ");
        }
        while(k != 2*i-1){
            printf("*");
            k++;
        }
        printf("\n");
    }
}

void pattern9(int num) {
   int coef = 1;
   for(int i = 0; i < num; i++){
       for(int spaces = 1; spaces <= num - i; spaces++){
           printf("  ");
       }
       for(int j = 0; j <= i; j++){
           if(j==0||i==0){
               coef = 1;
           }
           else{
               coef = coef * (i - j + 1) / j;
           }
           printf("%4d",coef);
       }
       printf("\n");
   }
}

void pattern10(int num){
    int number = 1;
    for(int i = 0; i < num; i++){
        for(int j = 0; j <= i; j++){
            printf("%d ",number);
            ++number;
        }
        printf("\n");
    }
}

int countOddEven(){
    int arr[] = {1,2,3,4,5,6};
    int evenCount = 0, oddCount = 0;
    for(int i = 0; i < sizeof(arr)/sizeof(arr[0]); i++){
        if(arr[i] % 2 == 0){
            evenCount++;
        }
        else{
            oddCount++;
        }
    }
    printf("Even : %d\nOdd : %d",evenCount,oddCount);
}

void sumOfElements(){
    int arr[] = {1,2,3,4,5,6},sum = 0;
    for(int i = 0; i < sizeof(arr)/sizeof(arr[0]); i++){
        sum += arr[i];
    }
    printf("Sum : %d",sum);
}

void largestSmallest(){
    int arr[] = {9,1,3,6,5,7},len = sizeof(arr)/sizeof(arr[0]);
    
    for(int i = 0; i < len; i++){
        for(int j = 0; j < len; j++){
            if(arr[i] < arr[j]){
                int temp = arr[j];
                arr[j] = arr[i];
                arr[i] = temp;
            }
        }
    }
    for(int i = 0; i < len; i++){
        printf("%d\t",arr[i]);
    }
    printf("\n");
    printf("Smallest : %d\nLargest : %d",arr[0],arr[len-1]);
}

void reverseArr(){
    int arr[] = {14,9,5,4,2,1},len = sizeof(arr)/sizeof(arr[0]);
    int i=0,j = len-1;
    while(i < j){
        int temp = arr[i];
        arr[i] = arr[j];
        arr[j] = temp;
        i++;
        j--;
    }
    i = 0;
    while(i < len){
        printf("%d\t",arr[i]);
        i++;
    }
}

void searchElement(){
    int arr[] = {1, 2, 5, 8, 10},status = 0;
    int key = 10;
    for(int i = 0; i < sizeof(arr)/sizeof(arr[0]); i++){
        if(key == arr[i]){
            status = i;
        }
    }
    printf("Found at %d",status);
}

void sumOf2DArr(){
    int arr[][3] = {{1, 2 ,3},{4, 5 ,6},{7, 8, 9}};
    
    int sum = 0;
    
    for(int i = 0; i < sizeof(arr)/sizeof(arr[0]); i++){
        for(int j = 0; j < sizeof(arr[0])/sizeof(arr[0][0]); j++){
            sum+=arr[i][j];
        }
    }
    printf("Sum : %d",sum);
}

void lenString(){
    char arr[] = "Hello";
    int len = 0;
    
    while(len >= 0){
        if(arr[len] == '\0'){
            break;
        }
        len++;
    }
    printf("Length : %d",len);
}

void countVowels(){
    char arr[] = "Hello";
    int len = 0,count = 0;
    
    while(len >= 0){
        if(arr[len] == '\0'){
            break;
        }
        len++;
    }
    for(int i = 0; i < len; i++){
        if(arr[i] == 'a' ||arr[i] == 'e' ||arr[i] == 'i' ||arr[i] == 'o' ||arr[i] == 'u' ||arr[i] == 'A' ||arr[i] == 'B' ||arr[i] == 'E' ||arr[i] == 'I' ||arr[i] == 'U'){
            count++;
        }
    }
    printf("VowelsCount : %d",count);
}

void compareTwoStrings(){
    char arr1[] = "Hello", arr2[] = "HEllo";
    int len1 = 0, len2 = 0,i = 0, j = 0,status = 1;
    while(len1 >= 0){
        if(arr1[len1] == '\0'){
            break;
        }
        len1++;
    }
    while(len2 >= 0){
        if(arr1[len2] == '\0'){
            break;
        }
        len2++;
    }
    
    while(i < len1 && j < len2){
        if(arr1[i] != arr2[j]){
            status = 0;
            break;
        }
        i++;
        j++;
    }
    status ? printf("Same") : printf("Not Same");
}

void copyString(){
    char arr1[] = "Hello";
    int len1 = 0,i = 0;
    while(len1 >= 0){
        if(arr1[len1] == '\0'){
            break;
        }
        len1++;
    }
    char arr2[len1];
    while(i < len1){
        arr2[i] = arr1[i];
        i++;
    }
    printf("%s",arr2);
    
}

void concatString(){
    char arr1[] = "Hello";
    char arr2[] = "World";
    int len1 = 0,len2 = 0, i = 0;
    while(len1 >= 0){
        if(arr1[len1] == '\0'){
            break;
        }
        len1++;
    }
    while(len2 >= 0){
        if(arr2[len2] == '\0'){
            break;
        }
        len2++;
    }
    while( i < len2){
        arr1[len1+i] = arr2[i];
        i++;
    }
    arr1[len1+len2] = '\0';
    printf("%s",arr1);
}

void SameOrNotUsingXor(int n1, int n2){
    if((n1 ^ n2) == 0){
        printf("Same");
    }
    else{
        printf("Not Same");
    }
}

void EvenOrOddUsingAnd(int num){
    if((num&1) == 0){
        printf("Even");
    }
    else{
        printf("Odd");
    }
}

void SwapUsingXor(int a,int b){
    a = a ^ b;
    b = a ^ b;
    a = a ^ b;
    printf("%d %d",a,b);
}

int main(){
    int a = 9, b = 0;
    //swap(&a,&b);
    //printf("%d %d",a,b);
    //digit(122);
    //reverseNum(428);
    //palindrome(588);
    //armstrong(152);
    //fibo(8); // 1 1 2 3 5 8 13 21
    //prime(17);
    //perfectNum(6);
    //box(6,6);
    //hollowBox(3,3);
    //diagonal(12,12);
    //pattern1(8);
    //pattern2(8);
    //pattern3(8);
    //pattern4(8);
    //pattern5(8);
    //pattern6(8);
    //pattern7(5);
    //pattern8(5);
    //pattern9(8);
    //pattern10(5);
    //countOddEven();
    //sumOfElements();
    //largestSmallest();
    //reverseArr();
    //searchElement();
    //sumOf2DArr();
    //lenString();
    //countVowels();
    //compareTwoStrings();
    //copyString();
    //concatString();
    //SameOrNotUsingXor(5,5);
    //EvenOrOddUsingAnd(14);
    //SwapUsingXor(5,6);
}